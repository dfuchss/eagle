package edu.kit.ipd.eagle.impl.xplore.rating;

import java.util.function.ToDoubleFunction;
import java.util.stream.Stream;

import edu.kit.ipd.eagle.port.xplore.layer.ILayerEntry;

/**
 * Defines the different combination functions for scores of a way. So these methods combine the scores of the
 * {@link ILayerEntry ILayerEntries} generated by {@link LayerEntryEvaluation} to a single score. {@code null} entries
 * will be ignored.
 *
 * @author Dominik Fuchss
 *
 */
public enum LayerCombination implements ToDoubleFunction<Stream<Double>> {
	/**
	 * Combine by simple build a sum.
	 */
	ADD(s -> s.mapToDouble(d -> toDouble(d, 0)).sum()),
	/**
	 * Combine by simple build a product.
	 */
	MUL(s -> s.mapToDouble(d -> toDouble(d, 1)).reduce(1, (a, b) -> a * b));

	private static double toDouble(Double d, double neutralElement) {
		return d == null ? neutralElement : d;
	}

	private ToDoubleFunction<Stream<Double>> function;

	LayerCombination(ToDoubleFunction<Stream<Double>> function) {
		this.function = function;
	}

	@Override
	public double applyAsDouble(Stream<Double> value) {
		return this.function.applyAsDouble(value);
	}

}
